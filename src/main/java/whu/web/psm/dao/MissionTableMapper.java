package whu.web.psm.dao;

import java.util.List;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import whu.web.psm.pojo.MissionTable;
import whu.web.psm.pojo.MissionTableExample;

@Mapper
public interface MissionTableMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table missiontable
     *
     * @mbggenerated
     */
    int countByExample(MissionTableExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table missiontable
     *
     * @mbggenerated
     */
    int deleteByExample(MissionTableExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table missiontable
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer mid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table missiontable
     *
     * @mbggenerated
     */
    int insert(MissionTable record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table missiontable
     *
     * @mbggenerated
     */
    int insertSelective(MissionTable record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table missiontable
     *
     * @mbggenerated
     */
    List<MissionTable> selectByExampleWithBLOBs(MissionTableExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table missiontable
     *
     * @mbggenerated
     */
    List<MissionTable> selectByExample(MissionTableExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table missiontable
     *
     * @mbggenerated
     */
    MissionTable selectByPrimaryKey(Integer mid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table missiontable
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") MissionTable record, @Param("example") MissionTableExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table missiontable
     *
     * @mbggenerated
     */
    int updateByExampleWithBLOBs(@Param("record") MissionTable record, @Param("example") MissionTableExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table missiontable
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") MissionTable record, @Param("example") MissionTableExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table missiontable
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(MissionTable record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table missiontable
     *
     * @mbggenerated
     */
    int updateByPrimaryKeyWithBLOBs(MissionTable record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table missiontable
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(MissionTable record);


    /**
     * 根据标签返回任务
     *
     * @param label -- 标签名
     * @param offset -- 总偏移量
     * @param limit -- 每页大小
     * @return 任务列表
     */
    List<MissionTable> selectMissionByLabel(String label, Integer limit, Integer offset);

    /**
     * 分页获取任务
     *
     * @param limit -- 每页大小
     * @param offset -- 总偏移量
     * @return
     */
    List<MissionTable> getMissionByPage(Integer limit, Integer offset);

    /**
     * 获取新加入的id
     * @return
     */
    int getNewId();
}